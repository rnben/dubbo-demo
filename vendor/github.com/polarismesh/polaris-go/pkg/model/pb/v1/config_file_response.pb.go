// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: config_file_response.proto

package v1

import (
	reflect "reflect"
	sync "sync"

	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigSimpleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Info *wrappers.StringValue `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ConfigSimpleResponse) Reset() {
	*x = ConfigSimpleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_file_response_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigSimpleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSimpleResponse) ProtoMessage() {}

func (x *ConfigSimpleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_file_response_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSimpleResponse.ProtoReflect.Descriptor instead.
func (*ConfigSimpleResponse) Descriptor() ([]byte, []int) {
	return file_config_file_response_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigSimpleResponse) GetCode() *wrappers.UInt32Value {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *ConfigSimpleResponse) GetInfo() *wrappers.StringValue {
	if x != nil {
		return x.Info
	}
	return nil
}

type ConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                     *wrappers.UInt32Value     `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Info                     *wrappers.StringValue     `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	ConfigFileGroup          *ConfigFileGroup          `protobuf:"bytes,3,opt,name=configFileGroup,proto3" json:"configFileGroup,omitempty"`
	ConfigFile               *ConfigFile               `protobuf:"bytes,4,opt,name=configFile,proto3" json:"configFile,omitempty"`
	ConfigFileRelease        *ConfigFileRelease        `protobuf:"bytes,5,opt,name=configFileRelease,proto3" json:"configFileRelease,omitempty"`
	ConfigFileReleaseHistory *ConfigFileReleaseHistory `protobuf:"bytes,6,opt,name=configFileReleaseHistory,proto3" json:"configFileReleaseHistory,omitempty"`
}

func (x *ConfigResponse) Reset() {
	*x = ConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_file_response_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResponse) ProtoMessage() {}

func (x *ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_file_response_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResponse.ProtoReflect.Descriptor instead.
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return file_config_file_response_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigResponse) GetCode() *wrappers.UInt32Value {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *ConfigResponse) GetInfo() *wrappers.StringValue {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ConfigResponse) GetConfigFileGroup() *ConfigFileGroup {
	if x != nil {
		return x.ConfigFileGroup
	}
	return nil
}

func (x *ConfigResponse) GetConfigFile() *ConfigFile {
	if x != nil {
		return x.ConfigFile
	}
	return nil
}

func (x *ConfigResponse) GetConfigFileRelease() *ConfigFileRelease {
	if x != nil {
		return x.ConfigFileRelease
	}
	return nil
}

func (x *ConfigResponse) GetConfigFileReleaseHistory() *ConfigFileReleaseHistory {
	if x != nil {
		return x.ConfigFileReleaseHistory
	}
	return nil
}

type ConfigBatchWriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Info      *wrappers.StringValue `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Total     *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=total,proto3" json:"total,omitempty"`
	Responses []*ConfigResponse     `protobuf:"bytes,4,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *ConfigBatchWriteResponse) Reset() {
	*x = ConfigBatchWriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_file_response_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigBatchWriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigBatchWriteResponse) ProtoMessage() {}

func (x *ConfigBatchWriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_file_response_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigBatchWriteResponse.ProtoReflect.Descriptor instead.
func (*ConfigBatchWriteResponse) Descriptor() ([]byte, []int) {
	return file_config_file_response_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigBatchWriteResponse) GetCode() *wrappers.UInt32Value {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *ConfigBatchWriteResponse) GetInfo() *wrappers.StringValue {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ConfigBatchWriteResponse) GetTotal() *wrappers.UInt32Value {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *ConfigBatchWriteResponse) GetResponses() []*ConfigResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type ConfigBatchQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                       *wrappers.UInt32Value       `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Info                       *wrappers.StringValue       `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Total                      *wrappers.UInt32Value       `protobuf:"bytes,3,opt,name=total,proto3" json:"total,omitempty"`
	ConfigFileGroups           []*ConfigFileGroup          `protobuf:"bytes,4,rep,name=configFileGroups,proto3" json:"configFileGroups,omitempty"`
	ConfigFiles                []*ConfigFile               `protobuf:"bytes,5,rep,name=configFiles,proto3" json:"configFiles,omitempty"`
	ConfigFileReleases         []*ConfigFileRelease        `protobuf:"bytes,6,rep,name=configFileReleases,proto3" json:"configFileReleases,omitempty"`
	ConfigFileReleaseHistories []*ConfigFileReleaseHistory `protobuf:"bytes,7,rep,name=configFileReleaseHistories,proto3" json:"configFileReleaseHistories,omitempty"`
}

func (x *ConfigBatchQueryResponse) Reset() {
	*x = ConfigBatchQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_file_response_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigBatchQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigBatchQueryResponse) ProtoMessage() {}

func (x *ConfigBatchQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_file_response_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigBatchQueryResponse.ProtoReflect.Descriptor instead.
func (*ConfigBatchQueryResponse) Descriptor() ([]byte, []int) {
	return file_config_file_response_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigBatchQueryResponse) GetCode() *wrappers.UInt32Value {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *ConfigBatchQueryResponse) GetInfo() *wrappers.StringValue {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ConfigBatchQueryResponse) GetTotal() *wrappers.UInt32Value {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *ConfigBatchQueryResponse) GetConfigFileGroups() []*ConfigFileGroup {
	if x != nil {
		return x.ConfigFileGroups
	}
	return nil
}

func (x *ConfigBatchQueryResponse) GetConfigFiles() []*ConfigFile {
	if x != nil {
		return x.ConfigFiles
	}
	return nil
}

func (x *ConfigBatchQueryResponse) GetConfigFileReleases() []*ConfigFileRelease {
	if x != nil {
		return x.ConfigFileReleases
	}
	return nil
}

func (x *ConfigBatchQueryResponse) GetConfigFileReleaseHistories() []*ConfigFileReleaseHistory {
	if x != nil {
		return x.ConfigFileReleaseHistories
	}
	return nil
}

type ConfigClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Info       *wrappers.StringValue `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	ConfigFile *ClientConfigFileInfo `protobuf:"bytes,3,opt,name=configFile,proto3" json:"configFile,omitempty"`
}

func (x *ConfigClientResponse) Reset() {
	*x = ConfigClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_file_response_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigClientResponse) ProtoMessage() {}

func (x *ConfigClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_file_response_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigClientResponse.ProtoReflect.Descriptor instead.
func (*ConfigClientResponse) Descriptor() ([]byte, []int) {
	return file_config_file_response_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigClientResponse) GetCode() *wrappers.UInt32Value {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *ConfigClientResponse) GetInfo() *wrappers.StringValue {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ConfigClientResponse) GetConfigFile() *ClientConfigFileInfo {
	if x != nil {
		return x.ConfigFile
	}
	return nil
}

var File_config_file_response_proto protoreflect.FileDescriptor

var file_config_file_response_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x82, 0x03, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x18, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x22, 0xe4, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x09, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0xca, 0x03, 0x0a, 0x18,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x3f, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x30, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x1a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x1a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x42,
	0x05, 0x5a, 0x03, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_file_response_proto_rawDescOnce sync.Once
	file_config_file_response_proto_rawDescData = file_config_file_response_proto_rawDesc
)

func file_config_file_response_proto_rawDescGZIP() []byte {
	file_config_file_response_proto_rawDescOnce.Do(func() {
		file_config_file_response_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_file_response_proto_rawDescData)
	})
	return file_config_file_response_proto_rawDescData
}

var file_config_file_response_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_config_file_response_proto_goTypes = []interface{}{
	(*ConfigSimpleResponse)(nil),     // 0: v1.ConfigSimpleResponse
	(*ConfigResponse)(nil),           // 1: v1.ConfigResponse
	(*ConfigBatchWriteResponse)(nil), // 2: v1.ConfigBatchWriteResponse
	(*ConfigBatchQueryResponse)(nil), // 3: v1.ConfigBatchQueryResponse
	(*ConfigClientResponse)(nil),     // 4: v1.ConfigClientResponse
	(*wrappers.UInt32Value)(nil),     // 5: google.protobuf.UInt32Value
	(*wrappers.StringValue)(nil),     // 6: google.protobuf.StringValue
	(*ConfigFileGroup)(nil),          // 7: v1.ConfigFileGroup
	(*ConfigFile)(nil),               // 8: v1.ConfigFile
	(*ConfigFileRelease)(nil),        // 9: v1.ConfigFileRelease
	(*ConfigFileReleaseHistory)(nil), // 10: v1.ConfigFileReleaseHistory
	(*ClientConfigFileInfo)(nil),     // 11: v1.ClientConfigFileInfo
}
var file_config_file_response_proto_depIdxs = []int32{
	5,  // 0: v1.ConfigSimpleResponse.code:type_name -> google.protobuf.UInt32Value
	6,  // 1: v1.ConfigSimpleResponse.info:type_name -> google.protobuf.StringValue
	5,  // 2: v1.ConfigResponse.code:type_name -> google.protobuf.UInt32Value
	6,  // 3: v1.ConfigResponse.info:type_name -> google.protobuf.StringValue
	7,  // 4: v1.ConfigResponse.configFileGroup:type_name -> v1.ConfigFileGroup
	8,  // 5: v1.ConfigResponse.configFile:type_name -> v1.ConfigFile
	9,  // 6: v1.ConfigResponse.configFileRelease:type_name -> v1.ConfigFileRelease
	10, // 7: v1.ConfigResponse.configFileReleaseHistory:type_name -> v1.ConfigFileReleaseHistory
	5,  // 8: v1.ConfigBatchWriteResponse.code:type_name -> google.protobuf.UInt32Value
	6,  // 9: v1.ConfigBatchWriteResponse.info:type_name -> google.protobuf.StringValue
	5,  // 10: v1.ConfigBatchWriteResponse.total:type_name -> google.protobuf.UInt32Value
	1,  // 11: v1.ConfigBatchWriteResponse.responses:type_name -> v1.ConfigResponse
	5,  // 12: v1.ConfigBatchQueryResponse.code:type_name -> google.protobuf.UInt32Value
	6,  // 13: v1.ConfigBatchQueryResponse.info:type_name -> google.protobuf.StringValue
	5,  // 14: v1.ConfigBatchQueryResponse.total:type_name -> google.protobuf.UInt32Value
	7,  // 15: v1.ConfigBatchQueryResponse.configFileGroups:type_name -> v1.ConfigFileGroup
	8,  // 16: v1.ConfigBatchQueryResponse.configFiles:type_name -> v1.ConfigFile
	9,  // 17: v1.ConfigBatchQueryResponse.configFileReleases:type_name -> v1.ConfigFileRelease
	10, // 18: v1.ConfigBatchQueryResponse.configFileReleaseHistories:type_name -> v1.ConfigFileReleaseHistory
	5,  // 19: v1.ConfigClientResponse.code:type_name -> google.protobuf.UInt32Value
	6,  // 20: v1.ConfigClientResponse.info:type_name -> google.protobuf.StringValue
	11, // 21: v1.ConfigClientResponse.configFile:type_name -> v1.ClientConfigFileInfo
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_config_file_response_proto_init() }
func file_config_file_response_proto_init() {
	if File_config_file_response_proto != nil {
		return
	}
	file_config_file_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_config_file_response_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigSimpleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_file_response_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_file_response_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigBatchWriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_file_response_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigBatchQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_file_response_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_file_response_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_file_response_proto_goTypes,
		DependencyIndexes: file_config_file_response_proto_depIdxs,
		MessageInfos:      file_config_file_response_proto_msgTypes,
	}.Build()
	File_config_file_response_proto = out.File
	file_config_file_response_proto_rawDesc = nil
	file_config_file_response_proto_goTypes = nil
	file_config_file_response_proto_depIdxs = nil
}
